networks:
  monitoring:
    driver: bridge

services:
  mtprotoproxy:
    build: .
    restart: unless-stopped
    container_name: mtprotoproxy
    network_mode: "host"
    volumes:
      - ./config.py:/home/tgproxy/config.py
      - ./mtprotoproxy.py:/home/tgproxy/mtprotoproxy.py
      - ./USERS.txt:/home/tgproxy/USERS.txt
      - /etc/localtime:/etc/localtime:ro
    expose:
      - 9100  # Expose metrics port
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "10m"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    networks:
      - monitoring
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    networks:
      - monitoring
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

volumes:
  prometheus_data:
  grafana_data:
